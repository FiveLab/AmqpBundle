<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        http://symfony.com/schema/dic/services/services-1.0.xsd"
>
    <parameters>
        <parameter key="fivelab.amqp.consumer_single.class">FiveLab\Component\Amqp\Consumer\SingleConsumer</parameter>
        <parameter key="fivelab.amqp.consumer_single.configuration.class">FiveLab\Component\Amqp\Consumer\ConsumerConfiguration</parameter>

        <parameter key="fivelab.amqp.consumer_spool.class">FiveLab\Component\Amqp\Consumer\Spool\SpoolConsumer</parameter>
        <parameter key="fivelab.amqp.consumer_spool.configuration.class">FiveLab\Component\Amqp\Consumer\Spool\SpoolConsumerConfiguration</parameter>

        <parameter key="fivelab.amqp.consumer_loop.class">FiveLab\Component\Amqp\Consumer\Loop\LoopConsumer</parameter>
        <parameter key="fivelab.amqp.consumer_loop.configuration.class">FiveLab\Component\Amqp\Consumer\Loop\LoopConsumerConfiguration</parameter>

        <parameter key="fivelab.amqp.consumer.middleware_collection.class">FiveLab\Component\Amqp\Consumer\Middleware\ConsumerMiddlewareCollection</parameter>
        <parameter key="fivelab.amqp.consumer.message_handler.class">FiveLab\Component\Amqp\Consumer\Handler\MessageHandlerChain</parameter>
    </parameters>

    <services>
        <!-- Single consumer -->
        <service id="fivelab.amqp.consumer_single.configuration.abstract" class="%fivelab.amqp.consumer_single.configuration.class%" abstract="true">
            <argument/> <!-- Requeue on error? -->
        </service>

        <service id="fivelab.amqp.consumer_single.abstract" class="%fivelab.amqp.consumer_single.class%" abstract="true">
            <argument/> <!-- Queue factory -->
            <argument/> <!-- Message handler -->
            <argument/> <!-- Middleware collection -->
            <argument/> <!-- Configuration -->
        </service>

        <!-- Spool consumer -->
        <service id="fivelab.amqp.consumer_spool.configuration.abstract" class="%fivelab.amqp.consumer_spool.configuration.class%" abstract="true">
            <argument/> <!-- Count messages -->
            <argument/> <!-- Timeout -->
            <argument/> <!-- Read timeout -->
            <argument/> <!-- Requeue on error? -->
        </service>

        <service id="fivelab.amqp.consumer_spool.abstract" class="%fivelab.amqp.consumer_spool.class%" abstract="true">
            <argument/> <!-- Queue factory -->
            <argument/> <!-- Message handler -->
            <argument/> <!-- Middleware collection -->
            <argument/> <!-- Configuration -->
        </service>

        <!-- Loop consumer -->
        <service id="fivelab.amqp.consumer_loop.configuration.abstract" class="%fivelab.amqp.consumer_loop.configuration.class%" abstract="true">
            <argument/> <!-- Read timeout -->
            <argument/> <!-- Requeue on error? -->
        </service>

        <service id="fivelab.amqp.consumer_loop.abstract" class="%fivelab.amqp.consumer_loop.class%" abstract="true">
            <argument/> <!-- Queue factory -->
            <argument/> <!-- Message handler -->
            <argument/> <!-- Middleware collection -->
            <argument/> <!-- Configuration -->
        </service>

        <!-- Common services -->
        <service id="fivelab.amqp.consumer.message_handler.abstract" class="%fivelab.amqp.consumer.message_handler.class%" abstract="true"/>
        <service id="fivelab.amqp.consumer.middleware_collection.abstract" class="%fivelab.amqp.consumer.middleware_collection.class%" abstract="true"/>
    </services>
</container>
