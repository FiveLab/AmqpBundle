name: Testing

on:
    push:
    pull_request:

jobs:
    code-style:
        name: Check code style
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    coverage: "none"
                    php-version: "7.4"
                    tools: "composer"

            -   name: Install vendors
                run: composer install --prefer-dist

            -   name: Configure PHPCS
                run: bin/phpcs --config-set show_warnings 0

            -   name: Check style on sources
                run: bin/phpcs --standard=vendor/escapestudios/symfony2-coding-standard/Symfony/ src/

            -   name: Check style on tests
                run: bin/phpcs --standard=tests/phpcs-ruleset.xml tests/

    tests:
        name: Run tests
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php: [ '7.2', '7.4' ]
                symfony: [ '3.0', '4.0', '5.0' ]

        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php }}"
                    tools: "composer"

            -   name: Get Composer Cache Directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ matrix.php }}
                    restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

            -   name: Configure Symfony version
                run: php .github/replace-version.php symfony/framework-bundle "~${{ matrix.symfony }}"

            -   name: Install vendors
                run: composer install

            -   name: Run tests
                run: bin/phpunit
